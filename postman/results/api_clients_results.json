{
  "collection": {
    "item": [
      {
        "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
        "name": "🪙 Binance API Tests",
        "item": [
          {
            "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
            "name": "Health Check",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v3",
                  "ping"
                ],
                "host": [
                  "{{binance_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
            "name": "Get Price - BTCUSDT",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v3",
                  "ticker",
                  "price"
                ],
                "host": [
                  "{{binance_base_url}}"
                ],
                "query": [
                  {
                    "key": "symbol",
                    "value": "BTCUSDT"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
            "name": "Get Quote - BTCUSDT",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v3",
                  "ticker",
                  "24hr"
                ],
                "host": [
                  "{{binance_base_url}}"
                ],
                "query": [
                  {
                    "key": "symbol",
                    "value": "BTCUSDT"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
            "name": "Get Multiple Quotes",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v3",
                  "ticker",
                  "24hr"
                ],
                "host": [
                  "{{binance_base_url}}"
                ],
                "query": [
                  {
                    "key": "symbols",
                    "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
            "name": "Place Test Order (Will Fail in Testnet)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v3",
                  "order",
                  "test"
                ],
                "host": [
                  "{{binance_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "X-MBX-APIKEY",
                  "value": "{{binance_api_key}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "symbol",
                    "value": "BTCUSDT"
                  },
                  {
                    "key": "side",
                    "value": "BUY"
                  },
                  {
                    "key": "type",
                    "value": "MARKET"
                  },
                  {
                    "key": "quantity",
                    "value": "0.001"
                  },
                  {
                    "key": "timestamp",
                    "value": "{{$timestamp}}"
                  }
                ]
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
        "name": "🔥 Bitget API Tests",
        "item": [
          {
            "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
            "name": "Health Check (Server Time)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "spot",
                  "v1",
                  "public",
                  "time"
                ],
                "host": [
                  "{{bitget_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
            "name": "Get Price - BTCUSDT_SPBL",
            "request": {
              "url": {
                "path": [
                  "api",
                  "spot",
                  "v1",
                  "market",
                  "ticker"
                ],
                "host": [
                  "{{bitget_base_url}}"
                ],
                "query": [
                  {
                    "key": "symbol",
                    "value": "BTCUSDT_SPBL"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
            "name": "Get Price - Alternative BTCUSDT",
            "request": {
              "url": {
                "path": [
                  "api",
                  "spot",
                  "v1",
                  "market",
                  "ticker"
                ],
                "host": [
                  "{{bitget_base_url}}"
                ],
                "query": [
                  {
                    "key": "symbol",
                    "value": "BTCUSDT"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
            "name": "Get All Tickers (Quotes)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "spot",
                  "v1",
                  "market",
                  "tickers"
                ],
                "host": [
                  "{{bitget_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
            "name": "Place Order (Will Fail - Test Environment)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "spot",
                  "v1",
                  "trade",
                  "order"
                ],
                "host": [
                  "{{bitget_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "ACCESS-KEY",
                  "value": "{{bitget_api_key}}"
                },
                {
                  "key": "ACCESS-PASSPHRASE",
                  "value": "{{bitget_passphrase}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
        "name": "💳 MTN Mobile Money Tests",
        "item": [
          {
            "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
            "name": "Health Check (Collections)",
            "request": {
              "url": {
                "path": [
                  "collection",
                  ""
                ],
                "host": [
                  "{{mtn_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Ocp-Apim-Subscription-Key",
                  "value": "{{mtn_primary_key}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
            "name": "Get Account Balance",
            "request": {
              "url": {
                "path": [
                  "collection",
                  "v1_0",
                  "account",
                  "balance"
                ],
                "host": [
                  "{{mtn_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Ocp-Apim-Subscription-Key",
                  "value": "{{mtn_primary_key}}"
                },
                {
                  "key": "X-Target-Environment",
                  "value": "sandbox"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
            "name": "Request to Pay (Sandbox)",
            "request": {
              "url": {
                "path": [
                  "collection",
                  "v1_0",
                  "requesttopay"
                ],
                "host": [
                  "{{mtn_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Ocp-Apim-Subscription-Key",
                  "value": "{{mtn_primary_key}}"
                },
                {
                  "key": "X-Target-Environment",
                  "value": "sandbox"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-Reference-Id",
                  "value": "{{$guid}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
            "name": "Get Payment Status",
            "request": {
              "url": {
                "path": [
                  "collection",
                  "v1_0",
                  "requesttopay",
                  "test-transaction-id"
                ],
                "host": [
                  "{{mtn_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Ocp-Apim-Subscription-Key",
                  "value": "{{mtn_primary_key}}"
                },
                {
                  "key": "X-Target-Environment",
                  "value": "sandbox"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "ef1bfb41-f288-491b-be49-e220714c5584",
        "name": "🍊 Orange Money Tests",
        "item": [
          {
            "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
            "name": "Health Check (Get Token)",
            "request": {
              "url": {
                "path": [
                  "oauth",
                  "token"
                ],
                "host": [
                  "{{orange_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{orange_authorization}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "grant_type",
                    "value": "client_credentials"
                  }
                ]
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
            "name": "Initiate Payment",
            "request": {
              "url": {
                "path": [
                  "webpayment"
                ],
                "host": [
                  "{{orange_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
            "name": "Get Payment Status",
            "request": {
              "url": {
                "path": [
                  "webpayment",
                  "test-transaction-id"
                ],
                "host": [
                  "{{orange_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
        "name": "🗄️ CRUD Service Tests",
        "item": [
          {
            "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
            "name": "Health Check",
            "request": {
              "url": {
                "path": [
                  "health"
                ],
                "host": [
                  "{{crud_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
            "name": "Get Wallet",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "wallets",
                  "user",
                  "test-user-id"
                ],
                "host": [
                  "{{crud_base_url}}"
                ],
                "query": [
                  {
                    "key": "currency",
                    "value": "USDT"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "26a5b442-2038-4286-9572-ebfc590bf415",
            "name": "Create Transaction",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "transactions"
                ],
                "host": [
                  "{{crud_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
            "name": "Update Wallet Balance",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "wallets",
                  "balance"
                ],
                "host": [
                  "{{crud_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "auth": {
      "type": "noauth",
      "noauth": []
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "9422cc7e-88f7-45d3-8f4b-4007047b9d47",
          "type": "text/javascript",
          "exec": [
            "// Generate timestamp for requests",
            "pm.globals.set('timestamp', Math.floor(Date.now() / 1000));",
            "",
            "// Add common headers if needed",
            "pm.request.headers.add({",
            "    key: 'User-Agent',",
            "    value: 'Afrikpay-Gateway/1.0'",
            "});"
          ],
          "_lastExecutionId": "24f1c79c-e813-4b15-b89b-21bf84b2f931"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "type": "text/javascript",
          "exec": [
            "// Common response tests",
            "pm.test('Response time is less than 5000ms', function () {",
            "    pm.expect(pm.response.responseTime).to.be.below(5000);",
            "});",
            "",
            "pm.test('Response has valid JSON or proper error', function () {",
            "    try {",
            "        pm.response.json();",
            "        pm.test('Response is valid JSON', function () {",
            "            pm.expect(true).to.be.true;",
            "        });",
            "    } catch (e) {",
            "        // For non-JSON responses, just check status",
            "        pm.test('Response status is documented', function () {",
            "            pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 401, 403, 404, 500]);",
            "        });",
            "    }",
            "});"
          ],
          "_lastExecutionId": "8d97b0e0-a661-4f74-8e6e-7b08c81dc746"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "ba179ac0-5b74-41d3-86db-f90c2a69a773",
      "name": "Afrikpay Gateway - API Clients E2E",
      "version": {
        "raw": "1.0.0",
        "major": 1,
        "minor": 0,
        "patch": 0,
        "prerelease": [],
        "build": [],
        "string": "1.0.0"
      },
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Collection for testing all external API clients used in E2E tests: Binance, Bitget, MTN MoMo, Orange Money",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "2d91528d-c6a5-4bed-ba1a-47d93b2412dd",
    "values": []
  },
  "globals": {
    "id": "3b8c1916-980f-4045-bc41-b44cb91c7cbd",
    "values": [
      {
        "type": "any",
        "value": 1751217791,
        "key": "timestamp"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 42,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 21,
        "pending": 0,
        "failed": 21
      },
      "tests": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 63,
        "pending": 0,
        "failed": 42
      },
      "testScripts": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 21,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1751217790216,
      "completed": 1751217791044
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 21,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81bbded1-3a6e-48bb-adc7-15cbdec642aa",
          "httpRequestId": "02e34853-a892-4480-b5ca-92938e8148a3"
        },
        "item": {
          "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ping"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v3",
              "ping"
            ],
            "host": [
              "{{binance_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "94f9a1f8-5f88-48ec-b5b0-6af10663a6c9",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{binance_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:1)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1f9ed10c-a83a-4a54-81c9-017c82987355",
          "length": 21,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "00de94ed-6cf2-46b6-9c5b-c2b66cd2dd90"
        },
        "item": {
          "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
          "name": "Get Price - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "price"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v3",
              "ticker",
              "price"
            ],
            "host": [
              "{{binance_base_url}}"
            ],
            "query": [
              {
                "key": "symbol",
                "value": "BTCUSDT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bc21ebc5-8e3c-4342-8a75-7c13b43bee8f",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{binance_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:2)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b1012cde-8a1d-425c-96c3-9fb1923e5479",
          "length": 21,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "790eaea0-5ee3-4409-9d01-464dbe875acf"
        },
        "item": {
          "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
          "name": "Get Quote - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v3",
              "ticker",
              "24hr"
            ],
            "host": [
              "{{binance_base_url}}"
            ],
            "query": [
              {
                "key": "symbol",
                "value": "BTCUSDT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2ec5bc6d-59ea-4171-945b-49dba7a2cba4",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{binance_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:3)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "93930ba4-b60f-47cb-b40a-f94f12c1fdc7",
          "length": 21,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c2ad328e-31cb-4fe4-82bd-4ac8e0a62b50"
        },
        "item": {
          "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
          "name": "Get Multiple Quotes",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbols",
                  "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v3",
              "ticker",
              "24hr"
            ],
            "host": [
              "{{binance_base_url}}"
            ],
            "query": [
              {
                "key": "symbols",
                "value": "[%22BTCUSDT%22,%22ETHUSDT%22]"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ae40200-ac56-465d-8ee3-c04a84519144",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{binance_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:4)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2eaea250-3864-4c54-b588-697012f06a0b",
          "length": 21,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a863ea7e-6f90-414c-bb1e-9b3dcc5f923d"
        },
        "item": {
          "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
          "name": "Place Test Order (Will Fail in Testnet)",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "order",
                "test"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-MBX-APIKEY",
                "value": "{{binance_api_key}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                },
                {
                  "key": "side",
                  "value": "BUY"
                },
                {
                  "key": "type",
                  "value": "MARKET"
                },
                {
                  "key": "quantity",
                  "value": "0.001"
                },
                {
                  "key": "timestamp",
                  "value": "{{$timestamp}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v3",
              "order",
              "test"
            ],
            "host": [
              "{{binance_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-MBX-APIKEY",
              "value": "{{binance_api_key}}"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "78ad6257-6d2c-4f77-af93-51079d39f8dd",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{binance_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "symbol",
                "value": "BTCUSDT"
              },
              {
                "key": "side",
                "value": "BUY"
              },
              {
                "key": "type",
                "value": "MARKET"
              },
              {
                "key": "quantity",
                "value": "0.001"
              },
              {
                "key": "timestamp",
                "value": "1751217790"
              }
            ]
          }
        },
        "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:5)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9b544126-6c33-45bf-92e5-d51ce08940b4",
          "length": 21,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0fcef346-3af8-41de-9b33-0c9806d65dcf"
        },
        "item": {
          "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
          "name": "Health Check (Server Time)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "public",
                "time"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "spot",
              "v1",
              "public",
              "time"
            ],
            "host": [
              "{{bitget_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0c2ba4fd-6277-4faa-b458-2d5ace5ac3d9",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{bitget_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:6)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "36322ec9-80cd-4652-a104-a5e786b13015",
          "length": 21,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "10b898ea-32f0-4b89-86f4-5103ab803877"
        },
        "item": {
          "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
          "name": "Get Price - BTCUSDT_SPBL",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT_SPBL"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "spot",
              "v1",
              "market",
              "ticker"
            ],
            "host": [
              "{{bitget_base_url}}"
            ],
            "query": [
              {
                "key": "symbol",
                "value": "BTCUSDT_SPBL"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4a664626-fe5f-4d4c-b13a-6b061778aaba",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{bitget_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:7)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9e78f17a-7346-44d7-a5e7-1bf457dcd9fc",
          "length": 21,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1f72588-35fa-4a66-a6d2-c92cbf46f6af"
        },
        "item": {
          "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
          "name": "Get Price - Alternative BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "spot",
              "v1",
              "market",
              "ticker"
            ],
            "host": [
              "{{bitget_base_url}}"
            ],
            "query": [
              {
                "key": "symbol",
                "value": "BTCUSDT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "99477621-e15a-4522-9615-d7cca572b484",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{bitget_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:8)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "764668b8-5143-4c8d-a637-d7eb66038da0",
          "length": 21,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b71f15d-5362-4277-af35-ce3c77232a03"
        },
        "item": {
          "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
          "name": "Get All Tickers (Quotes)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "tickers"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "spot",
              "v1",
              "market",
              "tickers"
            ],
            "host": [
              "{{bitget_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7217a13e-8846-4fb7-afaa-af02e229eab5",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{bitget_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:9)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7048724c-304c-4afd-b15e-02b54e579ce7",
          "length": 21,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "212882a7-acd2-4054-9e6b-2f6157ca82b3"
        },
        "item": {
          "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
          "name": "Place Order (Will Fail - Test Environment)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "trade",
                "order"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "ACCESS-KEY",
                "value": "{{bitget_api_key}}"
              },
              {
                "key": "ACCESS-PASSPHRASE",
                "value": "{{bitget_passphrase}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "spot",
              "v1",
              "trade",
              "order"
            ],
            "host": [
              "{{bitget_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "ACCESS-KEY",
              "value": "{{bitget_api_key}}"
            },
            {
              "key": "ACCESS-PASSPHRASE",
              "value": "{{bitget_passphrase}}"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a8aaf3f3-52f9-491f-b5d2-e2066f940717",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{bitget_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-1751217791\"\n}"
          }
        },
        "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:10)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "28c9e2a3-5d85-415a-8064-43c84d3de759",
          "length": 21,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b74be50-c25b-47ea-9985-4b589a87a284"
        },
        "item": {
          "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
          "name": "Health Check (Collections)",
          "request": {
            "url": {
              "path": [
                "collection",
                ""
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "collection",
              ""
            ],
            "host": [
              "{{mtn_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Ocp-Apim-Subscription-Key",
              "value": "{{mtn_primary_key}}"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6ca10bc9-0579-4805-aade-f694d711e84a",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{mtn_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:11)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "228408d4-7ec8-4180-8a84-300de2008290",
          "length": 21,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1cacc88c-ce52-4ace-9674-cb612bfcd4c3"
        },
        "item": {
          "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
          "name": "Get Account Balance",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "account",
                "balance"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "collection",
              "v1_0",
              "account",
              "balance"
            ],
            "host": [
              "{{mtn_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Ocp-Apim-Subscription-Key",
              "value": "{{mtn_primary_key}}"
            },
            {
              "key": "X-Target-Environment",
              "value": "sandbox"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0b2400a6-552d-4bc0-9839-646c80af2a2f",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{mtn_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:12)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "90226588-4ac7-4f59-bb56-e0e5162e8815",
          "length": 21,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f24ee73f-fefa-4d80-8495-32af2363b0d4"
        },
        "item": {
          "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
          "name": "Request to Pay (Sandbox)",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Reference-Id",
                "value": "{{$guid}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "collection",
              "v1_0",
              "requesttopay"
            ],
            "host": [
              "{{mtn_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Ocp-Apim-Subscription-Key",
              "value": "{{mtn_primary_key}}"
            },
            {
              "key": "X-Target-Environment",
              "value": "sandbox"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-Reference-Id",
              "value": "c74ad4ee-b60f-499b-a787-01e6877eb6e8"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ed6b6c53-b986-49e4-8e56-e21a6d3429b2",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{mtn_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-1751217791\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
          }
        },
        "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:13)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1972c518-fd81-4acc-b211-c368c2356d53",
          "length": 21,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dd9f2de1-5852-493c-bfe5-4bd6c481f10b"
        },
        "item": {
          "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay",
                "test-transaction-id"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "collection",
              "v1_0",
              "requesttopay",
              "test-transaction-id"
            ],
            "host": [
              "{{mtn_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Ocp-Apim-Subscription-Key",
              "value": "{{mtn_primary_key}}"
            },
            {
              "key": "X-Target-Environment",
              "value": "sandbox"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "57f63be6-cd93-4b8a-a260-a5bfcab532ab",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{mtn_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:14)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:14)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9d64a69b-1686-4bd8-86fa-e519f1446472",
          "length": 21,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "31d3238c-f887-4ec5-82a6-b849fde57d17"
        },
        "item": {
          "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
          "name": "Health Check (Get Token)",
          "request": {
            "url": {
              "path": [
                "oauth",
                "token"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{orange_authorization}}"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "oauth",
              "token"
            ],
            "host": [
              "{{orange_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{orange_authorization}}"
            },
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8e327060-d427-4cf7-b050-748ab9283d89",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{orange_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "grant_type",
                "value": "client_credentials"
              }
            ]
          }
        },
        "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{orange_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:15)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "261b157f-52a0-4fd4-ad06-625a7783fdf0",
          "length": 21,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c6e3a9f9-bd3d-499e-adaa-95904c52dfbf"
        },
        "item": {
          "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
          "name": "Initiate Payment",
          "request": {
            "url": {
              "path": [
                "webpayment"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "webpayment"
            ],
            "host": [
              "{{orange_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f12dcb09-3395-41e7-9aff-62f21ef2b359",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{orange_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-1751217791\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
          }
        },
        "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{orange_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:16)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "194f284f-964b-49b8-888b-a2d488b5d0d6",
          "length": 21,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a5edef99-44b3-4239-80d3-60eb984ccd2f"
        },
        "item": {
          "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "webpayment",
                "test-transaction-id"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "webpayment",
              "test-transaction-id"
            ],
            "host": [
              "{{orange_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "76a97c51-84ac-4858-991f-2e179cab63e4",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{orange_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{orange_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:17)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3550094e-d02b-4262-87b6-df802bec1e0b",
          "length": 21,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4fda0fd8-b13d-48cf-beb6-114603c85b19"
        },
        "item": {
          "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "health"
            ],
            "host": [
              "{{crud_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7ed852c9-ad64-47d5-b977-e32f22151451",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{crud_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:18)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:18)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0bfed969-f496-4dd9-a91f-5dfe976e11a3",
          "length": 21,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eac6d3fc-078b-4b60-aba6-e361f5811df9"
        },
        "item": {
          "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
          "name": "Get Wallet",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "user",
                "test-user-id"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [
                {
                  "key": "currency",
                  "value": "USDT"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v1",
              "wallets",
              "user",
              "test-user-id"
            ],
            "host": [
              "{{crud_base_url}}"
            ],
            "query": [
              {
                "key": "currency",
                "value": "USDT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ec98409d-0aa5-4ba5-a5a8-7f31a4c99902",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{crud_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:19)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:19)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "898ee8d4-2997-4237-a7d1-019b0ab31c19",
          "length": 21,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e547ff22-d207-49de-b8bc-2f42220ace15"
        },
        "item": {
          "id": "26a5b442-2038-4286-9572-ebfc590bf415",
          "name": "Create Transaction",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "transactions"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v1",
              "transactions"
            ],
            "host": [
              "{{crud_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "723ad917-a6ca-4676-bd63-9f0dc0600bc3",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{crud_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-1751217791\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
          }
        },
        "id": "26a5b442-2038-4286-9572-ebfc590bf415",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:20)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0dde4abc-c262-4366-980c-81aacd7c7961",
          "length": 21,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de639367-3ef0-4bac-9f35-54c5c120c665"
        },
        "item": {
          "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
          "name": "Update Wallet Balance",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "balance"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "api",
              "v1",
              "wallets",
              "balance"
            ],
            "host": [
              "{{crud_base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "Afrikpay-Gateway/1.0"
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "70628cf1-8a3d-40f7-b89d-e6e90f0fa02a",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{crud_base_url}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
          }
        },
        "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
        "requestError": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}"
        },
        "assertions": [
          {
            "assertion": "Response time is less than 5000ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 5000ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "Response status is documented",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response status is documented",
              "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:21)"
            }
          },
          {
            "assertion": "Response has valid JSON or proper error",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{binance_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{binance_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "0a4ea68a677af583fcc90ec23be2f1fd",
          "id": "02611a65-4168-4c51-96a4-7f7d51c97bc0",
          "timestamp": 1751217790286,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ping"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 21,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81bbded1-3a6e-48bb-adc7-15cbdec642aa",
          "httpRequestId": "02e34853-a892-4480-b5ca-92938e8148a3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "bdf0c32cda91544348e3ef465fd1c3e9",
          "id": "56eea239-749a-43b6-a0f7-2842f3f25b64",
          "timestamp": 1751217790293,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ping"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 21,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81bbded1-3a6e-48bb-adc7-15cbdec642aa",
          "httpRequestId": "02e34853-a892-4480-b5ca-92938e8148a3",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "373333ea-bbb6-4d2a-9eff-ecffd4dd5d09"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "eb2f9feb3138b7258d922d0635688531",
          "id": "d8094fb3-cf98-4ba1-aca8-1008c4a5bb6f",
          "timestamp": 1751217790294,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ping"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 21,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81bbded1-3a6e-48bb-adc7-15cbdec642aa",
          "httpRequestId": "02e34853-a892-4480-b5ca-92938e8148a3",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "373333ea-bbb6-4d2a-9eff-ecffd4dd5d09"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{binance_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{binance_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "0a4ea68a677af583fcc90ec23be2f1fd",
          "id": "8a8b791b-60f0-4798-8ff9-f3c351168406",
          "timestamp": 1751217790309,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
          "name": "Get Price - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "price"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1f9ed10c-a83a-4a54-81c9-017c82987355",
          "length": 21,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "00de94ed-6cf2-46b6-9c5b-c2b66cd2dd90"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "40669e61c1fad85accf38acaebd8e640",
          "id": "3bdcecba-c37c-4242-a3a3-aa84ec394d89",
          "timestamp": 1751217790311,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
          "name": "Get Price - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "price"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1f9ed10c-a83a-4a54-81c9-017c82987355",
          "length": 21,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "00de94ed-6cf2-46b6-9c5b-c2b66cd2dd90",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "e2310c41-363c-4c2b-8f0a-a3d2bb267581"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:2)",
          "checksum": "d7713252afb722f5b8f4056bd1cd7c9d",
          "id": "17945702-938b-4ace-b5cc-356aece29cc7",
          "timestamp": 1751217790312,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
          "name": "Get Price - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "price"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1f9ed10c-a83a-4a54-81c9-017c82987355",
          "length": 21,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "00de94ed-6cf2-46b6-9c5b-c2b66cd2dd90",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "e2310c41-363c-4c2b-8f0a-a3d2bb267581"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{binance_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{binance_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "0a4ea68a677af583fcc90ec23be2f1fd",
          "id": "fb197f73-fdf6-49c8-b2fe-d9559b6fead9",
          "timestamp": 1751217790324,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
          "name": "Get Quote - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b1012cde-8a1d-425c-96c3-9fb1923e5479",
          "length": 21,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "790eaea0-5ee3-4409-9d01-464dbe875acf"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "9e0871082b2ec1deb1acfe35780f7b86",
          "id": "dccaffbe-9c2c-4bbc-bf57-8fa61c746068",
          "timestamp": 1751217790327,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
          "name": "Get Quote - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b1012cde-8a1d-425c-96c3-9fb1923e5479",
          "length": 21,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "790eaea0-5ee3-4409-9d01-464dbe875acf",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "316d645f-a426-4276-941e-6b3b57af8bdd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:3)",
          "checksum": "5e03e27df856e08936e247576d16fb63",
          "id": "cd3056cd-7fe7-48eb-afa1-b7c8a64def6e",
          "timestamp": 1751217790327,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
          "name": "Get Quote - BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b1012cde-8a1d-425c-96c3-9fb1923e5479",
          "length": 21,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "790eaea0-5ee3-4409-9d01-464dbe875acf",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "316d645f-a426-4276-941e-6b3b57af8bdd"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{binance_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{binance_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "0a4ea68a677af583fcc90ec23be2f1fd",
          "id": "5d800f5f-d0e6-4f9a-b025-805f2cd1bf9b",
          "timestamp": 1751217790339,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
          "name": "Get Multiple Quotes",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbols",
                  "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "93930ba4-b60f-47cb-b40a-f94f12c1fdc7",
          "length": 21,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c2ad328e-31cb-4fe4-82bd-4ac8e0a62b50"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "90dbcff7e5a030bd260372df1d6fda12",
          "id": "63db8c18-874c-4164-9182-10b7bee2ef52",
          "timestamp": 1751217790341,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
          "name": "Get Multiple Quotes",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbols",
                  "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "93930ba4-b60f-47cb-b40a-f94f12c1fdc7",
          "length": 21,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c2ad328e-31cb-4fe4-82bd-4ac8e0a62b50",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "6e51cf7e-f8a6-4b4e-a660-199f4500580e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:4)",
          "checksum": "a47969c56f6f19f6b38039237ff907a6",
          "id": "6df07809-3f1d-4e7f-bec4-08ce104cdb23",
          "timestamp": 1751217790342,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
          "name": "Get Multiple Quotes",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "ticker",
                "24hr"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [
                {
                  "key": "symbols",
                  "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "93930ba4-b60f-47cb-b40a-f94f12c1fdc7",
          "length": 21,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c2ad328e-31cb-4fe4-82bd-4ac8e0a62b50",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "6e51cf7e-f8a6-4b4e-a660-199f4500580e"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{binance_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{binance_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{binance_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "0a4ea68a677af583fcc90ec23be2f1fd",
          "id": "76a8b56e-c052-4ab2-832a-44f645f4ea0d",
          "timestamp": 1751217790354,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
          "name": "Place Test Order (Will Fail in Testnet)",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "order",
                "test"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-MBX-APIKEY",
                "value": "{{binance_api_key}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                },
                {
                  "key": "side",
                  "value": "BUY"
                },
                {
                  "key": "type",
                  "value": "MARKET"
                },
                {
                  "key": "quantity",
                  "value": "0.001"
                },
                {
                  "key": "timestamp",
                  "value": "{{$timestamp}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2eaea250-3864-4c54-b588-697012f06a0b",
          "length": 21,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a863ea7e-6f90-414c-bb1e-9b3dcc5f923d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "540f89a4e793af244a48d4c8502b3601",
          "id": "ccd91591-0349-4e88-adad-c5392eb903e1",
          "timestamp": 1751217790357,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
          "name": "Place Test Order (Will Fail in Testnet)",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "order",
                "test"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-MBX-APIKEY",
                "value": "{{binance_api_key}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                },
                {
                  "key": "side",
                  "value": "BUY"
                },
                {
                  "key": "type",
                  "value": "MARKET"
                },
                {
                  "key": "quantity",
                  "value": "0.001"
                },
                {
                  "key": "timestamp",
                  "value": "{{$timestamp}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2eaea250-3864-4c54-b588-697012f06a0b",
          "length": 21,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a863ea7e-6f90-414c-bb1e-9b3dcc5f923d",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "369cbbd5-20e6-458d-86e8-cb9ce6ce13ab"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:5)",
          "checksum": "18ab56bbdffaafaf0942dabc4e9ab749",
          "id": "bcea6314-3294-4aad-a774-9023c0f11c57",
          "timestamp": 1751217790357,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
          "name": "Place Test Order (Will Fail in Testnet)",
          "request": {
            "url": {
              "path": [
                "api",
                "v3",
                "order",
                "test"
              ],
              "host": [
                "{{binance_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-MBX-APIKEY",
                "value": "{{binance_api_key}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                },
                {
                  "key": "side",
                  "value": "BUY"
                },
                {
                  "key": "type",
                  "value": "MARKET"
                },
                {
                  "key": "quantity",
                  "value": "0.001"
                },
                {
                  "key": "timestamp",
                  "value": "{{$timestamp}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0aceaef8-b906-4a5e-8466-5e9ef6b97bfe",
          "name": "🪙 Binance API Tests",
          "item": [
            {
              "id": "1d871167-54a8-4141-9908-d5d3ec40bc7c",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ping"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "565fd9d5-6b1c-4805-bd6d-117697686d71",
              "name": "Get Price - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "price"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "f02c1d0e-5ff6-4a67-af1d-3df0a22e8676",
              "name": "Get Quote - BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "8990a5ab-2385-495a-b4e9-ea104024716c",
              "name": "Get Multiple Quotes",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "ticker",
                    "24hr"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbols",
                      "value": "[\"BTCUSDT\",\"ETHUSDT\"]"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3c8978a-690a-4e4f-98d6-b567ec30f6e6",
              "name": "Place Test Order (Will Fail in Testnet)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v3",
                    "order",
                    "test"
                  ],
                  "host": [
                    "{{binance_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-MBX-APIKEY",
                    "value": "{{binance_api_key}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    },
                    {
                      "key": "side",
                      "value": "BUY"
                    },
                    {
                      "key": "type",
                      "value": "MARKET"
                    },
                    {
                      "key": "quantity",
                      "value": "0.001"
                    },
                    {
                      "key": "timestamp",
                      "value": "{{$timestamp}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2eaea250-3864-4c54-b588-697012f06a0b",
          "length": 21,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a863ea7e-6f90-414c-bb1e-9b3dcc5f923d",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "369cbbd5-20e6-458d-86e8-cb9ce6ce13ab"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{bitget_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{bitget_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "2eea5305b4b67269bee780be5158c08e",
          "id": "c7938099-4d55-4ae4-8308-7f717990f7ae",
          "timestamp": 1751217790489,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
          "name": "Health Check (Server Time)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "public",
                "time"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9b544126-6c33-45bf-92e5-d51ce08940b4",
          "length": 21,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0fcef346-3af8-41de-9b33-0c9806d65dcf"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "f295aa18ca5cc63ac7cc77232081d468",
          "id": "7c654a27-794d-40c8-8349-f1a9ec5b7a98",
          "timestamp": 1751217790491,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
          "name": "Health Check (Server Time)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "public",
                "time"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9b544126-6c33-45bf-92e5-d51ce08940b4",
          "length": 21,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0fcef346-3af8-41de-9b33-0c9806d65dcf",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "419d481f-d2fe-4df1-804d-2b96a1ec90cd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:6)",
          "checksum": "7ae9ba527ed643d62e6ea80079a0c6c0",
          "id": "4854b9af-95b7-4179-970e-65e08bb4485a",
          "timestamp": 1751217790492,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
          "name": "Health Check (Server Time)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "public",
                "time"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9b544126-6c33-45bf-92e5-d51ce08940b4",
          "length": 21,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0fcef346-3af8-41de-9b33-0c9806d65dcf",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "419d481f-d2fe-4df1-804d-2b96a1ec90cd"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{bitget_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{bitget_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "2eea5305b4b67269bee780be5158c08e",
          "id": "b642461e-3358-4549-979e-8bd3d27ec1a5",
          "timestamp": 1751217790505,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
          "name": "Get Price - BTCUSDT_SPBL",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT_SPBL"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "36322ec9-80cd-4652-a104-a5e786b13015",
          "length": 21,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "10b898ea-32f0-4b89-86f4-5103ab803877"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "ebbd9af186fd3125156d884bb71061ae",
          "id": "ba62288e-c51a-4fbd-bcb5-fde7e0c5469c",
          "timestamp": 1751217790507,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
          "name": "Get Price - BTCUSDT_SPBL",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT_SPBL"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "36322ec9-80cd-4652-a104-a5e786b13015",
          "length": 21,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "10b898ea-32f0-4b89-86f4-5103ab803877",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "dd596d23-224a-401e-bb9e-6de868073460"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:7)",
          "checksum": "5ffba6f00b48c4f940c3e236560ebdba",
          "id": "d95b46e7-28ea-4d80-9845-6d84e17c1546",
          "timestamp": 1751217790508,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
          "name": "Get Price - BTCUSDT_SPBL",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT_SPBL"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "36322ec9-80cd-4652-a104-a5e786b13015",
          "length": 21,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "10b898ea-32f0-4b89-86f4-5103ab803877",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "dd596d23-224a-401e-bb9e-6de868073460"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{bitget_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{bitget_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "2eea5305b4b67269bee780be5158c08e",
          "id": "7f80d5e4-01ed-4853-adfb-aa9b6ca66fe0",
          "timestamp": 1751217790520,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
          "name": "Get Price - Alternative BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9e78f17a-7346-44d7-a5e7-1bf457dcd9fc",
          "length": 21,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1f72588-35fa-4a66-a6d2-c92cbf46f6af"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "0e690494b5d45538e8c21d365233e182",
          "id": "ff54617a-db29-4f3e-b27b-a9c744590975",
          "timestamp": 1751217790522,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
          "name": "Get Price - Alternative BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9e78f17a-7346-44d7-a5e7-1bf457dcd9fc",
          "length": 21,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1f72588-35fa-4a66-a6d2-c92cbf46f6af",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "8786cb7b-e4d5-46d6-bd07-86377c30c53e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:8)",
          "checksum": "e5f908b92c247d0ac3cafcbc24455968",
          "id": "4fa4a077-9122-426a-829f-7ba55afec555",
          "timestamp": 1751217790523,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
          "name": "Get Price - Alternative BTCUSDT",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "ticker"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [
                {
                  "key": "symbol",
                  "value": "BTCUSDT"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9e78f17a-7346-44d7-a5e7-1bf457dcd9fc",
          "length": 21,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1f72588-35fa-4a66-a6d2-c92cbf46f6af",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "8786cb7b-e4d5-46d6-bd07-86377c30c53e"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{bitget_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{bitget_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "2eea5305b4b67269bee780be5158c08e",
          "id": "ddc01bb4-b586-4404-bef7-7e1600432f40",
          "timestamp": 1751217790535,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
          "name": "Get All Tickers (Quotes)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "tickers"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "764668b8-5143-4c8d-a637-d7eb66038da0",
          "length": 21,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b71f15d-5362-4277-af35-ce3c77232a03"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "455d9836a2499e664a039599476ed07b",
          "id": "bcc74cfb-ebdf-42da-8a23-236e8b7d4cf7",
          "timestamp": 1751217790537,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
          "name": "Get All Tickers (Quotes)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "tickers"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "764668b8-5143-4c8d-a637-d7eb66038da0",
          "length": 21,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b71f15d-5362-4277-af35-ce3c77232a03",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "925e8b2a-8937-4e3f-929e-e4df821368ec"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:9)",
          "checksum": "94017851e2d19daf6a28a18543cb72d9",
          "id": "9b14dc30-91d6-436b-8842-e7a74bb9a160",
          "timestamp": 1751217790538,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
          "name": "Get All Tickers (Quotes)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "market",
                "tickers"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "764668b8-5143-4c8d-a637-d7eb66038da0",
          "length": 21,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b71f15d-5362-4277-af35-ce3c77232a03",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "925e8b2a-8937-4e3f-929e-e4df821368ec"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{bitget_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{bitget_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{bitget_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "2eea5305b4b67269bee780be5158c08e",
          "id": "ebfb35fb-56bd-470e-b883-437b50f2704e",
          "timestamp": 1751217790549,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
          "name": "Place Order (Will Fail - Test Environment)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "trade",
                "order"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "ACCESS-KEY",
                "value": "{{bitget_api_key}}"
              },
              {
                "key": "ACCESS-PASSPHRASE",
                "value": "{{bitget_passphrase}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7048724c-304c-4afd-b15e-02b54e579ce7",
          "length": 21,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "212882a7-acd2-4054-9e6b-2f6157ca82b3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "6856a7ae0f08c6d9f78dfd8407c30ada",
          "id": "cfec90db-5cf2-423c-b178-3b33dfe987c3",
          "timestamp": 1751217790552,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
          "name": "Place Order (Will Fail - Test Environment)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "trade",
                "order"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "ACCESS-KEY",
                "value": "{{bitget_api_key}}"
              },
              {
                "key": "ACCESS-PASSPHRASE",
                "value": "{{bitget_passphrase}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7048724c-304c-4afd-b15e-02b54e579ce7",
          "length": 21,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "212882a7-acd2-4054-9e6b-2f6157ca82b3",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "d9b17d54-6991-4752-9a7f-45d9b9a1f513"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:10)",
          "checksum": "4ab260fab1442fc43e0e40ac15e2fb19",
          "id": "683cf473-1b62-47ab-9291-393f40daa8a2",
          "timestamp": 1751217790552,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
          "name": "Place Order (Will Fail - Test Environment)",
          "request": {
            "url": {
              "path": [
                "api",
                "spot",
                "v1",
                "trade",
                "order"
              ],
              "host": [
                "{{bitget_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "ACCESS-KEY",
                "value": "{{bitget_api_key}}"
              },
              {
                "key": "ACCESS-PASSPHRASE",
                "value": "{{bitget_passphrase}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0903ee2-bfe6-4b32-9e2e-eb7b6b567643",
          "name": "🔥 Bitget API Tests",
          "item": [
            {
              "id": "cbc482cf-fbf1-4e62-b3f6-afa99256bcc8",
              "name": "Health Check (Server Time)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "public",
                    "time"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d93e6b3f-9edf-4b7d-8c84-32a6048bf6b2",
              "name": "Get Price - BTCUSDT_SPBL",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT_SPBL"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f3b971e-3183-4016-8ff9-9e29f352f3d6",
              "name": "Get Price - Alternative BTCUSDT",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "ticker"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "symbol",
                      "value": "BTCUSDT"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "16c5458b-d2cd-4e92-9ecd-bb2d11d26206",
              "name": "Get All Tickers (Quotes)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "market",
                    "tickers"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "2f84b825-b8d6-401d-b9fc-de42b03aa32a",
              "name": "Place Order (Will Fail - Test Environment)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "spot",
                    "v1",
                    "trade",
                    "order"
                  ],
                  "host": [
                    "{{bitget_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "ACCESS-KEY",
                    "value": "{{bitget_api_key}}"
                  },
                  {
                    "key": "ACCESS-PASSPHRASE",
                    "value": "{{bitget_passphrase}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"symbol\": \"BTCUSDT_SPBL\",\n  \"side\": \"buy\",\n  \"orderType\": \"market\",\n  \"size\": \"10\",\n  \"clientOrderId\": \"test-{{$timestamp}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7048724c-304c-4afd-b15e-02b54e579ce7",
          "length": 21,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "212882a7-acd2-4054-9e6b-2f6157ca82b3",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "d9b17d54-6991-4752-9a7f-45d9b9a1f513"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{mtn_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{mtn_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "eeb6b5b86dbdef3d91e2be3387f0369a",
          "id": "5b784f2a-87b9-4118-9766-482d93849206",
          "timestamp": 1751217790767,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
          "name": "Health Check (Collections)",
          "request": {
            "url": {
              "path": [
                "collection",
                ""
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "28c9e2a3-5d85-415a-8064-43c84d3de759",
          "length": 21,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b74be50-c25b-47ea-9985-4b589a87a284"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "c714be522f227eb01eb711d1e975b2ca",
          "id": "1d2c536a-27dd-4c5e-b347-8377c6242bdb",
          "timestamp": 1751217790770,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
          "name": "Health Check (Collections)",
          "request": {
            "url": {
              "path": [
                "collection",
                ""
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "28c9e2a3-5d85-415a-8064-43c84d3de759",
          "length": 21,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b74be50-c25b-47ea-9985-4b589a87a284",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "880ab71f-b794-41b9-94b3-a076289a8a91"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:11)",
          "checksum": "78f11a5baf458c93b3b26ab3701a858a",
          "id": "52342b4b-15c0-45c1-b45c-035b6631c554",
          "timestamp": 1751217790770,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
          "name": "Health Check (Collections)",
          "request": {
            "url": {
              "path": [
                "collection",
                ""
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "28c9e2a3-5d85-415a-8064-43c84d3de759",
          "length": 21,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b74be50-c25b-47ea-9985-4b589a87a284",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "880ab71f-b794-41b9-94b3-a076289a8a91"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{mtn_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{mtn_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "eeb6b5b86dbdef3d91e2be3387f0369a",
          "id": "02fe6d87-954a-4680-b88b-c210995ca24a",
          "timestamp": 1751217790782,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
          "name": "Get Account Balance",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "account",
                "balance"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "228408d4-7ec8-4180-8a84-300de2008290",
          "length": 21,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1cacc88c-ce52-4ace-9674-cb612bfcd4c3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "aaad1d49305fdb0fd6f7657077317f2b",
          "id": "25f33aab-61a6-47fe-a9aa-a6fea6c890ff",
          "timestamp": 1751217790784,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
          "name": "Get Account Balance",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "account",
                "balance"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "228408d4-7ec8-4180-8a84-300de2008290",
          "length": 21,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1cacc88c-ce52-4ace-9674-cb612bfcd4c3",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "538a5eee-b307-468f-a459-7dedc89e4d60"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:12)",
          "checksum": "5b93cf7ce7293088a8d78284015c8066",
          "id": "fda87bb5-52d2-4dcc-8470-b8d25e4e1d92",
          "timestamp": 1751217790785,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
          "name": "Get Account Balance",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "account",
                "balance"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "228408d4-7ec8-4180-8a84-300de2008290",
          "length": 21,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1cacc88c-ce52-4ace-9674-cb612bfcd4c3",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "538a5eee-b307-468f-a459-7dedc89e4d60"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{mtn_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{mtn_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "eeb6b5b86dbdef3d91e2be3387f0369a",
          "id": "c2dae4d6-20a0-4350-9535-d6ac8c064339",
          "timestamp": 1751217790796,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
          "name": "Request to Pay (Sandbox)",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Reference-Id",
                "value": "{{$guid}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "90226588-4ac7-4f59-bb56-e0e5162e8815",
          "length": 21,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f24ee73f-fefa-4d80-8495-32af2363b0d4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "0a47c110bf53b281a74337e3d2074ead",
          "id": "97f5eced-1827-4064-b4ea-23888c624750",
          "timestamp": 1751217790799,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
          "name": "Request to Pay (Sandbox)",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Reference-Id",
                "value": "{{$guid}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "90226588-4ac7-4f59-bb56-e0e5162e8815",
          "length": 21,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f24ee73f-fefa-4d80-8495-32af2363b0d4",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "3a74be8a-fb53-4a43-8092-93495c67c980"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:13)",
          "checksum": "effe57f38dbd3fe97a8afb5c56c5cbe2",
          "id": "0f531075-0a98-41cc-a170-77662ba151e4",
          "timestamp": 1751217790799,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
          "name": "Request to Pay (Sandbox)",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Reference-Id",
                "value": "{{$guid}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "90226588-4ac7-4f59-bb56-e0e5162e8815",
          "length": 21,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f24ee73f-fefa-4d80-8495-32af2363b0d4",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "3a74be8a-fb53-4a43-8092-93495c67c980"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{mtn_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{mtn_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{mtn_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "eeb6b5b86dbdef3d91e2be3387f0369a",
          "id": "9c0ca280-bff3-4b65-836e-7810ae2d2203",
          "timestamp": 1751217790810,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay",
                "test-transaction-id"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1972c518-fd81-4acc-b211-c368c2356d53",
          "length": 21,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dd9f2de1-5852-493c-bfe5-4bd6c481f10b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:14)",
          "checksum": "a28515e5d4fc0ce616446b710bc70088",
          "id": "92cccb48-9fa0-4053-90ca-db95c73296ae",
          "timestamp": 1751217790812,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay",
                "test-transaction-id"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1972c518-fd81-4acc-b211-c368c2356d53",
          "length": 21,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dd9f2de1-5852-493c-bfe5-4bd6c481f10b",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "3166f770-c472-4786-9565-9a13d7821322"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:14)",
          "checksum": "29641a448600c3e61bf86b5fc1838ccf",
          "id": "c2efba48-90f1-4333-939a-f798f8c18c64",
          "timestamp": 1751217790813,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "collection",
                "v1_0",
                "requesttopay",
                "test-transaction-id"
              ],
              "host": [
                "{{mtn_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{mtn_primary_key}}"
              },
              {
                "key": "X-Target-Environment",
                "value": "sandbox"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8e3c2088-df97-421c-92e2-4e01051d3c89",
          "name": "💳 MTN Mobile Money Tests",
          "item": [
            {
              "id": "182a93bf-5bdc-4b70-ad73-96dc20f63ad3",
              "name": "Health Check (Collections)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    ""
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "ea3aeda3-d533-42a2-970f-6589ed66ec44",
              "name": "Get Account Balance",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "account",
                    "balance"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "5e6a4d59-edc3-45e5-b4e9-d46916c1a826",
              "name": "Request to Pay (Sandbox)",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-Reference-Id",
                    "value": "{{$guid}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": \"100\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"test-{{$timestamp}}\",\n  \"payer\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"256774290781\"\n  },\n  \"payerMessage\": \"Test payment from Afrikpay Gateway\",\n  \"payeeNote\": \"Payment for crypto purchase\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "1260ef16-6db2-43dd-8b24-112e2c712c95",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "collection",
                    "v1_0",
                    "requesttopay",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{mtn_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{mtn_primary_key}}"
                  },
                  {
                    "key": "X-Target-Environment",
                    "value": "sandbox"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1972c518-fd81-4acc-b211-c368c2356d53",
          "length": 21,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dd9f2de1-5852-493c-bfe5-4bd6c481f10b",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "3166f770-c472-4786-9565-9a13d7821322"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{orange_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{orange_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{orange_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "443052b53c7997158b09eab00bf7055c",
          "id": "dceb4bae-fbe5-4b58-9e3e-f2d852913554",
          "timestamp": 1751217790873,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
          "name": "Health Check (Get Token)",
          "request": {
            "url": {
              "path": [
                "oauth",
                "token"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{orange_authorization}}"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9d64a69b-1686-4bd8-86fa-e519f1446472",
          "length": 21,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "31d3238c-f887-4ec5-82a6-b849fde57d17"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:15)",
          "checksum": "4bdb4ab9be71e9820af02432cee51e1a",
          "id": "b8f3680b-2fcb-4064-919b-9d2a586af04a",
          "timestamp": 1751217790876,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
          "name": "Health Check (Get Token)",
          "request": {
            "url": {
              "path": [
                "oauth",
                "token"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{orange_authorization}}"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9d64a69b-1686-4bd8-86fa-e519f1446472",
          "length": 21,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "31d3238c-f887-4ec5-82a6-b849fde57d17",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "3c426b83-e9a0-46c4-9a90-ffe50e9791f0"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:15)",
          "checksum": "0fcb875c1cc2e50b872ec12bfd82e630",
          "id": "f0492e51-e0ad-4b54-a178-ab34335c0ec5",
          "timestamp": 1751217790876,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
          "name": "Health Check (Get Token)",
          "request": {
            "url": {
              "path": [
                "oauth",
                "token"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{orange_authorization}}"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9d64a69b-1686-4bd8-86fa-e519f1446472",
          "length": 21,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "31d3238c-f887-4ec5-82a6-b849fde57d17",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "3c426b83-e9a0-46c4-9a90-ffe50e9791f0"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{orange_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{orange_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{orange_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "443052b53c7997158b09eab00bf7055c",
          "id": "fe243c97-026c-496d-ab91-c99e14f05524",
          "timestamp": 1751217790892,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
          "name": "Initiate Payment",
          "request": {
            "url": {
              "path": [
                "webpayment"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "261b157f-52a0-4fd4-ad06-625a7783fdf0",
          "length": 21,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c6e3a9f9-bd3d-499e-adaa-95904c52dfbf"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "5f782e577b2500e76b614e458bb3f7f8",
          "id": "111560e8-360e-4f9f-a78b-b97caa938c59",
          "timestamp": 1751217790895,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
          "name": "Initiate Payment",
          "request": {
            "url": {
              "path": [
                "webpayment"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "261b157f-52a0-4fd4-ad06-625a7783fdf0",
          "length": 21,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c6e3a9f9-bd3d-499e-adaa-95904c52dfbf",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "19bb1274-9c4f-4648-b837-aa0f08dd7a5f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:16)",
          "checksum": "b5f3aa4d10e65f469153139b96f31a67",
          "id": "faeb3329-9128-4700-9c8f-596a904c53b5",
          "timestamp": 1751217790895,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
          "name": "Initiate Payment",
          "request": {
            "url": {
              "path": [
                "webpayment"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "261b157f-52a0-4fd4-ad06-625a7783fdf0",
          "length": 21,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c6e3a9f9-bd3d-499e-adaa-95904c52dfbf",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "19bb1274-9c4f-4648-b837-aa0f08dd7a5f"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{orange_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{orange_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{orange_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "443052b53c7997158b09eab00bf7055c",
          "id": "fb2fc83f-510f-471e-8eb6-fef3ac760ec1",
          "timestamp": 1751217790908,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "webpayment",
                "test-transaction-id"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "194f284f-964b-49b8-888b-a2d488b5d0d6",
          "length": 21,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a5edef99-44b3-4239-80d3-60eb984ccd2f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "3b15a9bda5509041816aab6e9f177131",
          "id": "defb999c-46dd-42ec-ba42-73043b1e655c",
          "timestamp": 1751217790911,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "webpayment",
                "test-transaction-id"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "194f284f-964b-49b8-888b-a2d488b5d0d6",
          "length": 21,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a5edef99-44b3-4239-80d3-60eb984ccd2f",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "812a349d-df50-4150-b848-1c43e460b148"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:17)",
          "checksum": "cd1a5ecdca04b66497c1064c0d74b9b7",
          "id": "b2804292-3218-49ae-8ef2-c6581c7c858b",
          "timestamp": 1751217790911,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
          "name": "Get Payment Status",
          "request": {
            "url": {
              "path": [
                "webpayment",
                "test-transaction-id"
              ],
              "host": [
                "{{orange_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "ef1bfb41-f288-491b-be49-e220714c5584",
          "name": "🍊 Orange Money Tests",
          "item": [
            {
              "id": "c5bcbf8f-f843-46e3-9568-19fbe38456b0",
              "name": "Health Check (Get Token)",
              "request": {
                "url": {
                  "path": [
                    "oauth",
                    "token"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{orange_authorization}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "4bbc1686-c705-42ab-9ad8-979ed04bf54b",
              "name": "Initiate Payment",
              "request": {
                "url": {
                  "path": [
                    "webpayment"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"merchant\": {\n    \"country\": \"CI\",\n    \"name\": \"Afrikpay Gateway\"\n  },\n  \"order\": {\n    \"amount\": 100,\n    \"currency\": \"XOF\",\n    \"id\": \"test-{{$timestamp}}\",\n    \"reference\": \"Crypto purchase payment\"\n  },\n  \"customer\": {\n    \"msisdn\": \"+22507000000\",\n    \"country\": \"CI\"\n  },\n  \"notif_url\": \"https://webhook.site/test\",\n  \"return_url\": \"https://your-app.com/return\",\n  \"cancel_url\": \"https://your-app.com/cancel\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d635bc10-e6ad-468b-b8e8-a670f7b2af00",
              "name": "Get Payment Status",
              "request": {
                "url": {
                  "path": [
                    "webpayment",
                    "test-transaction-id"
                  ],
                  "host": [
                    "{{orange_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer YOUR_ACCESS_TOKEN_HERE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "194f284f-964b-49b8-888b-a2d488b5d0d6",
          "length": 21,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a5edef99-44b3-4239-80d3-60eb984ccd2f",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "812a349d-df50-4150-b848-1c43e460b148"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{crud_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{crud_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "a1be086ceb7e4a80b1b5bbc304cc0f3b",
          "id": "103ede76-ca05-46bb-b6a1-8c9893ad2b59",
          "timestamp": 1751217790997,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3550094e-d02b-4262-87b6-df802bec1e0b",
          "length": 21,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4fda0fd8-b13d-48cf-beb6-114603c85b19"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "2d230c7272b602ef9ea9a59978c03894",
          "id": "01312ae7-10b4-400f-a802-1018bfab5e60",
          "timestamp": 1751217791000,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3550094e-d02b-4262-87b6-df802bec1e0b",
          "length": 21,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4fda0fd8-b13d-48cf-beb6-114603c85b19",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "1c1e3300-b620-4436-8f4f-782c3661c600"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:18)",
          "checksum": "77a4d272111d1955035cc7649029c74a",
          "id": "bb9cd894-24b4-44a1-944f-5526898db869",
          "timestamp": 1751217791000,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3550094e-d02b-4262-87b6-df802bec1e0b",
          "length": 21,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4fda0fd8-b13d-48cf-beb6-114603c85b19",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "1c1e3300-b620-4436-8f4f-782c3661c600"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{crud_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{crud_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "a1be086ceb7e4a80b1b5bbc304cc0f3b",
          "id": "88d099d8-bdd1-46f6-954d-b0cad14564f5",
          "timestamp": 1751217791012,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
          "name": "Get Wallet",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "user",
                "test-user-id"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [
                {
                  "key": "currency",
                  "value": "USDT"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0bfed969-f496-4dd9-a91f-5dfe976e11a3",
          "length": 21,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eac6d3fc-078b-4b60-aba6-e361f5811df9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "0898e8babf62db12f829f01bfda888f2",
          "id": "521a74e8-0001-4b14-90e9-f10c3a70c37b",
          "timestamp": 1751217791014,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
          "name": "Get Wallet",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "user",
                "test-user-id"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [
                {
                  "key": "currency",
                  "value": "USDT"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0bfed969-f496-4dd9-a91f-5dfe976e11a3",
          "length": 21,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eac6d3fc-078b-4b60-aba6-e361f5811df9",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "a941c79b-0d64-4950-bab0-4e860dbc6a76"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:19)",
          "checksum": "2934d16ab1feab0b0eeebbf44f0fc574",
          "id": "6f603a03-7a3e-4373-b995-b41437161ebc",
          "timestamp": 1751217791015,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
          "name": "Get Wallet",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "user",
                "test-user-id"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [
                {
                  "key": "currency",
                  "value": "USDT"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0bfed969-f496-4dd9-a91f-5dfe976e11a3",
          "length": 21,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eac6d3fc-078b-4b60-aba6-e361f5811df9",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "a941c79b-0d64-4950-bab0-4e860dbc6a76"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{crud_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{crud_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "a1be086ceb7e4a80b1b5bbc304cc0f3b",
          "id": "50fb4664-7c2a-4f4a-a2a8-9ae91dbeac39",
          "timestamp": 1751217791026,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "26a5b442-2038-4286-9572-ebfc590bf415",
          "name": "Create Transaction",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "transactions"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "898ee8d4-2997-4237-a7d1-019b0ab31c19",
          "length": 21,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e547ff22-d207-49de-b8bc-2f42220ace15"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "9e14afea148b71795428a416f82704f1",
          "id": "2fdfd9a6-d0a1-4f2f-93dd-30434f2a17c6",
          "timestamp": 1751217791028,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "26a5b442-2038-4286-9572-ebfc590bf415",
          "name": "Create Transaction",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "transactions"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "898ee8d4-2997-4237-a7d1-019b0ab31c19",
          "length": 21,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e547ff22-d207-49de-b8bc-2f42220ace15",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "31f14a60-0651-4ebe-b700-88168bbb2891"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:20)",
          "checksum": "960765fa6fd9a9bec7ee6f4f1d07db7f",
          "id": "b1a675c9-a425-425a-a4d8-a8ff213b8431",
          "timestamp": 1751217791028,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "26a5b442-2038-4286-9572-ebfc590bf415",
          "name": "Create Transaction",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "transactions"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "898ee8d4-2997-4237-a7d1-019b0ab31c19",
          "length": 21,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e547ff22-d207-49de-b8bc-2f42220ace15",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "31f14a60-0651-4ebe-b700-88168bbb2891"
        }
      },
      {
        "error": {
          "errno": -3008,
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{crud_base_url}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{crud_base_url}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{crud_base_url}}\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
          "checksum": "a1be086ceb7e4a80b1b5bbc304cc0f3b",
          "id": "9d657922-aa7f-44c3-818d-dd90020a9028",
          "timestamp": 1751217791039,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 122,
              "functionName": "GetAddrInfoReqWrap.onlookupall [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookupall [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
          "name": "Update Wallet Balance",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "balance"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0dde4abc-c262-4366-980c-81aacd7c7961",
          "length": 21,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de639367-3ef0-4bac-9f35-54c5c120c665"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 5000ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:21)",
          "checksum": "3ab6dafe1b60f998e769f925ce8fe08a",
          "id": "9fd815c3-2b28-473d-bcbc-4ca5dbecff09",
          "timestamp": 1751217791041,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
          "name": "Update Wallet Balance",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "balance"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0dde4abc-c262-4366-980c-81aacd7c7961",
          "length": 21,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de639367-3ef0-4bac-9f35-54c5c120c665",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "8d97b0e0-a661-4f74-8e6e-7b08c81dc746"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response status is documented",
          "message": "expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200, 201, 400, 401, 403, 404, 500 ]\n   at Object.eval sandbox-script.js:3:21)",
          "checksum": "fa0adbc822f11de811488cb1da914083",
          "id": "426fb1ce-6e92-4117-9fae-1f9e39467612",
          "timestamp": 1751217791041,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
          "name": "Update Wallet Balance",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "wallets",
                "balance"
              ],
              "host": [
                "{{crud_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4eb56328-7217-412c-838a-9e598cec3bbe",
          "name": "🗄️ CRUD Service Tests",
          "item": [
            {
              "id": "31c27ea4-382e-41d8-8624-a7a0ba32d0df",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c4c7fda7-258d-4e09-8682-f66ccf7571df",
              "name": "Get Wallet",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "user",
                    "test-user-id"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [
                    {
                      "key": "currency",
                      "value": "USDT"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "26a5b442-2038-4286-9572-ebfc590bf415",
              "name": "Create Transaction",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "transactions"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 100.50,\n  \"type\": \"PURCHASE\",\n  \"status\": \"PENDING\",\n  \"reference\": \"test-tx-{{$timestamp}}\",\n  \"description\": \"Test crypto purchase transaction\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "04147d75-a03e-4cd8-9565-1c384f7a31ef",
              "name": "Update Wallet Balance",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "wallets",
                    "balance"
                  ],
                  "host": [
                    "{{crud_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"test-user-id\",\n  \"currency\": \"USDT\",\n  \"amount\": 50.25,\n  \"operation\": \"ADD\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0dde4abc-c262-4366-980c-81aacd7c7961",
          "length": 21,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de639367-3ef0-4bac-9f35-54c5c120c665",
          "scriptId": "4bc411ef-aad0-451d-950e-6abbd584b495",
          "execution": "8d97b0e0-a661-4f74-8e6e-7b08c81dc746"
        }
      }
    ],
    "error": null
  }
}