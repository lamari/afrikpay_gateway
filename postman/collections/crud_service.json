{
  "info": {
    "name": "Afrikpay CRUD Service",
    "description": "Collection pour tester les endpoints du service CRUD d'Afrikpay Gateway",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8002",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Vérifie si le service CRUD est en marche"
      },
      "response": []
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Create User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "    pm.globals.set('user_id', jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password_hash\": \"$2a$10$XXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Crée un nouvel utilisateur"
          },
          "response": []
        },
        {
          "name": "Get User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{user_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Récupère les détails d'un utilisateur"
          },
          "response": []
        },
        {
          "name": "Update User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('email', 'updated@example.com');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"updated@example.com\",\n    \"password_hash\": \"$2a$10$XXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n    \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{user_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Met à jour un utilisateur existant"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{user_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Supprime un utilisateur"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Wallets",
      "item": [
        {
          "name": "Create Wallet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has wallet data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('user_id');",
                  "    pm.globals.set('wallet_id', jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user_id\": \"{{user_id}}\",\n    \"balance\": 0.0,\n    \"currency\": \"USDT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/wallets",
              "host": ["{{baseUrl}}"],
              "path": ["wallets"]
            },
            "description": "Crée un nouveau portefeuille"
          },
          "response": []
        },
        {
          "name": "Create Wallet (API v1)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has wallet data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('user_id');",
                  "    pm.globals.set('wallet_btc_id', jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user_id\": \"{{user_id}}\",\n    \"balance\": 0.0,\n    \"currency\": \"BTC\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/wallets",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "wallets"]
            },
            "description": "Crée un nouveau portefeuille via l'API v1"
          },
          "response": []
        },
        {
          "name": "Get Wallet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct wallet data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('user_id');",
                  "    pm.expect(jsonData).to.have.property('currency');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/wallets/{{wallet_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["wallets", "{{wallet_id}}"]
            },
            "description": "Récupère les détails d'un portefeuille"
          },
          "response": []
        },
        {
          "name": "Get User Wallet by Currency",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct wallet data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('user_id', pm.globals.get('user_id'));",
                  "    pm.expect(jsonData).to.have.property('currency', 'USDT');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{user_id}}/wallets?currency=USDT",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "{{user_id}}", "wallets"],
              "query": [
                {
                  "key": "currency",
                  "value": "USDT"
                }
              ]
            },
            "description": "Récupère un portefeuille d'utilisateur par devise"
          },
          "response": []
        },
        {
          "name": "Update Wallet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated wallet data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('balance', 100);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user_id\": \"{{user_id}}\",\n    \"balance\": 100.0,\n    \"currency\": \"USDT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/wallets/{{wallet_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["wallets", "{{wallet_id}}"]
            },
            "description": "Met à jour un portefeuille existant"
          },
          "response": []
        },
        {
          "name": "Update Wallet Balance",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated balance\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('balance', 150);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 50.0,\n    \"currency\": \"USDT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/wallets/{{wallet_id}}/balance",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "wallets", "{{wallet_id}}", "balance"]
            },
            "description": "Met à jour uniquement le solde d'un portefeuille"
          },
          "response": []
        },
        {
          "name": "Delete Wallet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/wallets/{{wallet_btc_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["wallets", "{{wallet_btc_id}}"]
            },
            "description": "Supprime un portefeuille"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Create Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has transaction data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('wallet_id');",
                  "    pm.globals.set('transaction_id', jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"wallet_id\": \"{{wallet_id}}\",\n    \"amount\": 50.0,\n    \"type\": \"deposit\",\n    \"status\": \"pending\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["transactions"]
            },
            "description": "Crée une nouvelle transaction"
          },
          "response": []
        },
        {
          "name": "Get Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct transaction data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('wallet_id', pm.globals.get('wallet_id'));",
                  "    pm.expect(jsonData).to.have.property('type');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/{{transaction_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["transactions", "{{transaction_id}}"]
            },
            "description": "Récupère les détails d'une transaction"
          },
          "response": []
        },
        {
          "name": "Update Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated transaction data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status', 'success');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"wallet_id\": \"{{wallet_id}}\",\n    \"amount\": 50.0,\n    \"type\": \"deposit\",\n    \"status\": \"success\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/transactions/{{transaction_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["transactions", "{{transaction_id}}"]
            },
            "description": "Met à jour une transaction existante"
          },
          "response": []
        },
        {
          "name": "Delete Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/{{transaction_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["transactions", "{{transaction_id}}"]
            },
            "description": "Supprime une transaction"
          },
          "response": []
        }
      ]
    }
  ]
}
